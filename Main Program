#include <cstdlib> 
#include <fstream> 
#include <iomanip> 
#include <iostream> 
#include <string> 
#include <math.h>
#include <vector>
using namespace std; 



void matrixMul(int m1[2][2], int m2[2][2], int res[2][2])
{
	for (int r = 0; r < 2; r++)
	{
		for (int s = 0; s < 2; s++)
		{
			int sum = 0;
			for (int e = 0; e < 2; e++)
			{
				sum += m1[r][e] * m2[e][s];
			}
			res[r][s] = sum;
		}
	}
}

void matrixAdd(int m1[2][2], int m2[2][2], int res[2][2])
{
	for (int j = 0; j < 2; j++)
	{
		for (int k = 0; k < 2; k++)
		{
			res[j][k] = m1[j][k] + m2[j][k];
		}
	}
}

void matrixMultScal(int scalar, int m1[2][2], int res[2][2])
{
	for (int a = 0; a < 2; a++)
	{
		for (int b = 0; b < 2; b++)
		{
			res[a][b] = scalar * m1[a][b];
		}
	}
}

void printM(int matrix[2][2])
{
	for (int m = 0; m < 2; m++)
	{
		for (int n = 0; n < 2; n++)
		{
			cout << matrix[m][n] << " ";
		}
		cout << endl;
	}
}

int main()
{
	int matrixA[2][2] = { {2,0}, {4,2} };
	int matrixB[2][2] = { {1,3}, {2,0} };
	int matrixC[2][2] = { {1,0}, {0,1} };
	int result[2][2];

	cout << "Problem 1:" << endl;
	matrixAdd(matrixA, matrixB, result);
	printM(result);

	cout << endl << "Problem 2:" << endl;
	matrixMultScal(-4, matrixB, result);
	printM(result);

	cout << endl << "Problem 3:" << endl;
	matrixMul(matrixA, matrixB, result);
	printM(result);

	cout << endl << "Problem 4:" << endl;
	matrixMul(matrixB, matrixA, result);
	printM(result);

	cout << endl << "Problem 5:" << endl;
	matrixMul(matrixC, matrixB, result);
	matrixMul(result, matrixA, result);
	printM(result);
}
